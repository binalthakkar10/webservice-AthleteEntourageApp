<?php

/**
 * This is the model base class for the table "convert_to_share".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ConvertToShare".
 *
 * Columns in table "convert_to_share" available as properties of the model,
 * followed by relations of table "convert_to_share" available as properties of the model.
 *
 * @property integer $convert_id
 * @property integer $user_id
 * @property double $no_of_shares
 * @property double $share_price
 * @property double $total_share_price
 * @property string $updated_date
 * @property string $created_date
 * @property integer $is_delete
 *
 * @property UserDetail $user
 */
abstract class BaseConvertToShare extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'convert_to_share';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ConvertToShare|ConvertToShares', $n);
	}

	public static function representingColumn() {
		return 'updated_date';
	}

	public function rules() {
		return array(
			array('user_id, no_of_shares, share_price, total_share_price, updated_date', 'required'),
			array('user_id, is_delete', 'numerical', 'integerOnly'=>true),
			array('no_of_shares, share_price, total_share_price', 'numerical'),
			array('created_date', 'safe'),
			array('created_date, is_delete', 'default', 'setOnEmpty' => true, 'value' => null),
			array('convert_id, user_id, no_of_shares, share_price, total_share_price, updated_date, created_date, is_delete', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'UserDetail', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'convert_id' => Yii::t('app', 'Convert'),
			'user_id' => null,
			'no_of_shares' => Yii::t('app', 'No Of Shares'),
			'share_price' => Yii::t('app', 'Share Price'),
			'total_share_price' => Yii::t('app', 'Total Share Price'),
			'updated_date' => Yii::t('app', 'Updated Date'),
			'created_date' => Yii::t('app', 'Created Date'),
			'is_delete' => Yii::t('app', 'Is Delete'),
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('convert_id', $this->convert_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('no_of_shares', $this->no_of_shares);
		$criteria->compare('share_price', $this->share_price);
		$criteria->compare('total_share_price', $this->total_share_price);
		$criteria->compare('updated_date', $this->updated_date, true);
		$criteria->compare('created_date', $this->created_date, true);
		$criteria->compare('is_delete', $this->is_delete);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}