<?php

/**
 * This is the model base class for the table "athlete_notification".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "AthleteNotification".
 *
 * Columns in table "athlete_notification" available as properties of the model,
 * followed by relations of table "athlete_notification" available as properties of the model.
 *
 * @property integer $athlete_id
 * @property integer $user_id
 * @property string $screen_name
 * @property integer $campaign
 * @property integer $new_athlete
 * @property integer $post_to_exchange
 * @property integer $badge
 *
 * @property UserDetail $user
 */
abstract class BaseAthleteNotification extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'athlete_notification';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'AthleteNotification|AthleteNotifications', $n);
	}

	public static function representingColumn() {
		return 'screen_name';
	}

	public function rules() {
		return array(
			array('user_id, screen_name', 'required'),
			array('user_id, campaign, new_athlete, post_to_exchange, badge', 'numerical', 'integerOnly'=>true),
			array('screen_name', 'length', 'max'=>100),
			array('campaign, new_athlete, post_to_exchange, badge', 'default', 'setOnEmpty' => true, 'value' => null),
			array('athlete_id, user_id, screen_name, campaign, new_athlete, post_to_exchange, badge', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'UserDetail', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'athlete_id' => Yii::t('app', 'Athlete'),
			'user_id' => null,
			'screen_name' => Yii::t('app', 'Screen Name'),
			'campaign' => Yii::t('app', 'Campaign'),
			'new_athlete' => Yii::t('app', 'New Athlete'),
			'post_to_exchange' => Yii::t('app', 'Post To Exchange'),
			'badge' => Yii::t('app', 'Badge'),
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('athlete_id', $this->athlete_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('screen_name', $this->screen_name, true);
		$criteria->compare('campaign', $this->campaign);
		$criteria->compare('new_athlete', $this->new_athlete);
		$criteria->compare('post_to_exchange', $this->post_to_exchange);
		$criteria->compare('badge', $this->badge);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}