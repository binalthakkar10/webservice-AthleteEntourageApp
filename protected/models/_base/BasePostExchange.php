<?php

/**
 * This is the model base class for the table "post_exchange".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PostExchange".
 *
 * Columns in table "post_exchange" available as properties of the model,
 * followed by relations of table "post_exchange" available as properties of the model.
 *
 * @property integer $exchange_id
 * @property integer $post_id
 * @property integer $user_id
 * @property double $impact_score
 * @property double $paid_amount
 * @property string $created_date
 *
 * @property Posts $post
 */
abstract class BasePostExchange extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'post_exchange';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Post|Post', $n);
	}

	public static function representingColumn() {
		return 'created_date';
	}

	public function rules() {
		return array(
			array('post_id, user_id, impact_score, paid_amount, created_date', 'required'),
			array('post_id, user_id', 'numerical', 'integerOnly'=>true),
			array('impact_score, paid_amount', 'numerical'),
			array('exchange_id, post_id, user_id, impact_score, paid_amount, created_date', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'post' => array(self::BELONGS_TO, 'Posts', 'post_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'exchange_id' => Yii::t('app', 'Exchange'),
			'post_id' => null,
			'user_id' => Yii::t('app', 'User'),
			'impact_score' => Yii::t('app', 'Impact Score'),
			'paid_amount' => Yii::t('app', 'Paid Amount'),
			'created_date' => Yii::t('app', 'Created Date'),
			'post' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('exchange_id', $this->exchange_id);
		$criteria->compare('post_id', $this->post_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('impact_score', $this->impact_score);
		$criteria->compare('paid_amount', $this->paid_amount);
		$criteria->compare('created_date', $this->created_date, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}