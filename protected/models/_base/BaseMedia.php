<?php

/**
 * This is the model base class for the table "media".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Media".
 *
 * Columns in table "media" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $media_id
 * @property string $media_type
 * @property string $file_name
 * @property integer $postexchange_id
 * @property integer $inbox_id
 * @property integer $campaign_id
 * @property integer $is_delete
 *
 */
abstract class BaseMedia extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'media';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Media|Medias', $n);
	}

	public static function representingColumn() {
		return 'media_type';
	}

	public function rules() {
		return array(
			array('media_type, file_name, postexchange_id, campaign_id', 'required'),
			array('postexchange_id, inbox_id, campaign_id, is_delete', 'numerical', 'integerOnly'=>true),
			array('media_type', 'length', 'max'=>10),
			array('file_name', 'length', 'max'=>1000),
			array('inbox_id, is_delete', 'default', 'setOnEmpty' => true, 'value' => null),
			array('media_id, media_type, file_name, postexchange_id, inbox_id, campaign_id, is_delete', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'media_id' => Yii::t('app', 'Media'),
			'media_type' => Yii::t('app', 'Media Type'),
			'file_name' => Yii::t('app', 'File Name'),
			'postexchange_id' => Yii::t('app', 'Postexchange'),
			'inbox_id' => Yii::t('app', 'Inbox'),
			'campaign_id' => Yii::t('app', 'Campaign'),
			'is_delete' => Yii::t('app', 'Is Delete'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('media_id', $this->media_id);
		$criteria->compare('media_type', $this->media_type, true);
		$criteria->compare('file_name', $this->file_name, true);
		$criteria->compare('postexchange_id', $this->postexchange_id);
		$criteria->compare('inbox_id', $this->inbox_id);
		$criteria->compare('campaign_id', $this->campaign_id);
		$criteria->compare('is_delete', $this->is_delete);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}