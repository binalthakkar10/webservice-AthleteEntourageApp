<?php

/**
 * This is the model base class for the table "posts".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Posts".
 *
 * Columns in table "posts" available as properties of the model,
 * followed by relations of table "posts" available as properties of the model.
 *
 * @property integer $post_id
 * @property string $post_text
 * @property integer $user_id
 * @property string $created_date
 *
 * @property PostExchange[] $postExchanges
 * @property UserDetail $user
 */
abstract class BasePosts extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'posts';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Posts|Posts', $n);
	}

	public static function representingColumn() {
		return 'post_text';
	}

	public function rules() {
		return array(
			array('post_text, user_id, created_date', 'required'),
			array('user_id', 'numerical', 'integerOnly'=>true),
			array('post_text', 'length', 'max'=>5000),
			array('post_id, post_text, user_id, created_date', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'postExchanges' => array(self::HAS_MANY, 'PostExchange', 'post_id'),
			'user' => array(self::BELONGS_TO, 'UserDetail', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'post_id' => Yii::t('app', 'Post'),
			'post_text' => Yii::t('app', 'Post Text'),
			'user_id' => null,
			'created_date' => Yii::t('app', 'Created Date'),
			'postExchanges' => null,
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('post_id', $this->post_id);
		$criteria->compare('post_text', $this->post_text, true);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('created_date', $this->created_date, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}