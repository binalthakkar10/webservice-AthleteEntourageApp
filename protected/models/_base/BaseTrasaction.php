<?php

/**
 * This is the model base class for the table "trasaction".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Trasaction".
 *
 * Columns in table "trasaction" available as properties of the model,
 * followed by relations of table "trasaction" available as properties of the model.
 *
 * @property integer $transaction_id
 * @property integer $campaign_id
 * @property string $created_date
 * @property double $amount
 * @property string $card_type
 *
 * @property Campaign $campaign
 */
abstract class BaseTrasaction extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'trasaction';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Trasaction|Trasactions', $n);
	}

	public static function representingColumn() {
		return 'created_date';
	}

	public function rules() {
		return array(
			array('transaction_id, campaign_id, created_date, amount', 'required'),
			array('transaction_id, campaign_id', 'numerical', 'integerOnly'=>true),
			array('amount', 'numerical'),
			array('card_type', 'length', 'max'=>100),
			array('card_type', 'default', 'setOnEmpty' => true, 'value' => null),
			array('transaction_id, campaign_id, created_date, amount, card_type', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'campaign' => array(self::BELONGS_TO, 'Campaign', 'campaign_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'transaction_id' => Yii::t('app', 'Transaction'),
			'campaign_id' => null,
			'created_date' => Yii::t('app', 'Created Date'),
			'amount' => Yii::t('app', 'Amount'),
			'card_type' => Yii::t('app', 'Card Type'),
			'campaign' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('transaction_id', $this->transaction_id);
		$criteria->compare('campaign_id', $this->campaign_id);
		$criteria->compare('created_date', $this->created_date, true);
		$criteria->compare('amount', $this->amount);
		$criteria->compare('card_type', $this->card_type, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}