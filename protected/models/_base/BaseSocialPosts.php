<?php

/**
 * This is the model base class for the table "social_posts".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "SocialPosts".
 *
 * Columns in table "social_posts" available as properties of the model,
 * followed by relations of table "social_posts" available as properties of the model.
 *
 * @property integer $social_id
 * @property integer $user_id
 * @property string $twitter_screen_name
 * @property string $fb_screen_name
 * @property integer $campaign_id
 * @property string $fb_post_id
 * @property string $twitter_post_id
 * @property string $fb_reach
 * @property string $twitter_reach
 * @property double $price
 * @property integer $is_exchange
 * @property integer $rated
 * @property string $created_date
 * @property integer $is_delete
 * @property string $message
 * @property string $video_url
 * @property string $image_url
 *
 * @property UserDetail $user
 * @property Campaign $campaign
 */
abstract class BaseSocialPosts extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'social_posts';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'SocialPosts|SocialPosts', $n);
	}

	public static function representingColumn() {
		return 'twitter_screen_name';
	}

	public function rules() {
		return array(
			array('user_id, twitter_screen_name, fb_screen_name, campaign_id, fb_post_id, twitter_post_id, fb_reach, twitter_reach, price, created_date, message, video_url, image_url', 'required'),
			array('user_id, campaign_id, is_exchange, rated, is_delete', 'numerical', 'integerOnly'=>true),
			array('price', 'numerical'),
			array('twitter_screen_name, fb_screen_name', 'length', 'max'=>100),
			array('fb_post_id, twitter_post_id', 'length', 'max'=>250),
			array('fb_reach, twitter_reach', 'length', 'max'=>15),
			array('message, video_url, image_url', 'length', 'max'=>500),
			array('is_exchange, rated, is_delete', 'default', 'setOnEmpty' => true, 'value' => null),
			array('social_id, user_id, twitter_screen_name, fb_screen_name, campaign_id, fb_post_id, twitter_post_id, fb_reach, twitter_reach, price, is_exchange, rated, created_date, is_delete, message, video_url, image_url', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'UserDetail', 'user_id'),
			'campaign' => array(self::BELONGS_TO, 'Campaign', 'campaign_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'social_id' => Yii::t('app', 'Social'),
			'user_id' => null,
			'twitter_screen_name' => Yii::t('app', 'Twitter Screen Name'),
			'fb_screen_name' => Yii::t('app', 'Fb Screen Name'),
			'campaign_id' => null,
			'fb_post_id' => Yii::t('app', 'Fb Post'),
			'twitter_post_id' => Yii::t('app', 'Twitter Post'),
			'fb_reach' => Yii::t('app', 'Fb Reach'),
			'twitter_reach' => Yii::t('app', 'Twitter Reach'),
			'price' => Yii::t('app', 'Price'),
			'is_exchange' => Yii::t('app', 'Is Exchange'),
			'rated' => Yii::t('app', 'Rated'),
			'created_date' => Yii::t('app', 'Created Date'),
			'is_delete' => Yii::t('app', 'Is Delete'),
			'message' => Yii::t('app', 'Message'),
			'video_url' => Yii::t('app', 'Video Url'),
			'image_url' => Yii::t('app', 'Image Url'),
			'user' => null,
			'campaign' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('social_id', $this->social_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('twitter_screen_name', $this->twitter_screen_name, true);
		$criteria->compare('fb_screen_name', $this->fb_screen_name, true);
		$criteria->compare('campaign_id', $this->campaign_id);
		$criteria->compare('fb_post_id', $this->fb_post_id, true);
		$criteria->compare('twitter_post_id', $this->twitter_post_id, true);
		$criteria->compare('fb_reach', $this->fb_reach, true);
		$criteria->compare('twitter_reach', $this->twitter_reach, true);
		$criteria->compare('price', $this->price);
		$criteria->compare('is_exchange', $this->is_exchange);
		$criteria->compare('rated', $this->rated);
		$criteria->compare('created_date', $this->created_date, true);
		$criteria->compare('is_delete', $this->is_delete);
		$criteria->compare('message', $this->message, true);
		$criteria->compare('video_url', $this->video_url, true);
		$criteria->compare('image_url', $this->image_url, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}